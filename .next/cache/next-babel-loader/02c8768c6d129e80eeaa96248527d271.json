{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/nitbhatn0/Desktop/myToons/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Card from '../components/card';\nimport Filters from '../components/filters';\n\nvar Home = /*#__PURE__*/function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      CharacterDataToSend: []\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var url, response, CharacterData, species, gender, origin, speciesFilterData, genderFilterData, originFilterData;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = 'https://rickandmortyapi.com/api/character/ ';\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 6:\n              CharacterData = _context.sent;\n              // let filterData = [\n              //     {\n              //         label: \"Species\",\n              //         options: speciesFilterData\n              //     },\n              //     {\n              //         label: \"Gender\",\n              //         options: []\n              //     },\n              //     {\n              //         label: \"Origin\",\n              //         options: []\n              //     }\n              // ]\n              species = [];\n              gender = [];\n              origin = [];\n              speciesFilterData = [];\n              genderFilterData = [];\n              originFilterData = [];\n              CharacterData.results.find(function (data) {\n                species.push(data.species);\n                gender.push(data.gender);\n                origin.push(data.origin);\n              });\n              speciesFilterData = new Set(species);\n              genderFilterData = new Set(gender);\n              originFilterData = new Set(origin);\n              this.setState({\n                CharacterDataToSend: CharacterData.results\n              });\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, __jsx(Filter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }), __jsx(Card, {\n        CharacterData: this.state.CharacterDataToSend,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/nitbhatn0/Desktop/myToons/pages/index.js"],"names":["React","Card","Filters","Home","props","state","CharacterDataToSend","url","fetch","response","json","CharacterData","species","gender","origin","speciesFilterData","genderFilterData","originFilterData","results","find","data","push","Set","setState","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;IACMC,I;;;;;AACF,gBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAChB,8BAAOA,KAAP;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,mBAAmB,EAAE;AADZ,KAAb;AAFgB;AAKnB;;;;;;;;;;AAESC,cAAAA,G,GAAM,6C;;+CACWC,KAAK,CAACD,GAAD,C;;;AAAtBE,cAAAA,Q;;+CACsBA,QAAQ,CAACC,IAAT,E;;;AAAtBC,cAAAA,a;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,cAAAA,O,GAAU,E;AACVC,cAAAA,M,GAAS,E;AACTC,cAAAA,M,GAAS,E;AAETC,cAAAA,iB,GAAmB,E;AACnBC,cAAAA,gB,GAAkB,E;AAClBC,cAAAA,gB,GAAmB,E;AAGvBN,cAAAA,aAAa,CAACO,OAAd,CAAsBC,IAAtB,CAA2B,UAAAC,IAAI,EAAI;AAC/BR,gBAAAA,OAAO,CAACS,IAAR,CAAaD,IAAI,CAACR,OAAlB;AACAC,gBAAAA,MAAM,CAACQ,IAAP,CAAYD,IAAI,CAACP,MAAjB;AACAC,gBAAAA,MAAM,CAACO,IAAP,CAAYD,IAAI,CAACN,MAAjB;AACH,eAJD;AAMAC,cAAAA,iBAAiB,GAAG,IAAIO,GAAJ,CAAQV,OAAR,CAApB;AACAI,cAAAA,gBAAgB,GAAG,IAAIM,GAAJ,CAAQT,MAAR,CAAnB;AACAI,cAAAA,gBAAgB,GAAG,IAAIK,GAAJ,CAAQR,MAAR,CAAnB;AAEA,mBAAKS,QAAL,CAAc;AAAEjB,gBAAAA,mBAAmB,EAAEK,aAAa,CAACO;AAArC,eAAd;;;;;;;;;;;6BAGM;AACN,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,MAAC,IAAD;AAAM,QAAA,aAAa,EAAE,KAAKb,KAAL,CAAWC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMH;;;;EAtDcN,KAAK,CAACwB,S;;AAyDzB,eAAerB,IAAf","sourcesContent":["import React from 'react';\nimport Card from '../components/card';\nimport Filters from '../components/filters';\nclass Home extends React.Component {\n    constructor (props) {\n        super (props);\n        this.state = {\n            CharacterDataToSend: []\n        }\n    }\n    async componentDidMount () {\n        const url = 'https://rickandmortyapi.com/api/character/ ';\n        const response = await fetch(url);\n        const CharacterData = await response.json();\n        // let filterData = [\n        //     {\n        //         label: \"Species\",\n        //         options: speciesFilterData\n        //     },\n        //     {\n        //         label: \"Gender\",\n        //         options: []\n        //     },\n        //     {\n        //         label: \"Origin\",\n        //         options: []\n        //     }\n        // ]\n        let species = [];\n        let gender = [];\n        let origin = [];\n\n        let speciesFilterData= [];\n        let genderFilterData= [];\n        let originFilterData = [];\n        \n\n        CharacterData.results.find(data => {\n            species.push(data.species);\n            gender.push(data.gender);\n            origin.push(data.origin);\n        });\n\n        speciesFilterData = new Set(species)\n        genderFilterData = new Set(gender)\n        originFilterData = new Set(origin)\n\n        this.setState({ CharacterDataToSend: CharacterData.results });\n    }\n\n    render () {\n        return (\n            <div>\n                <Filter></Filter>\n                <Card CharacterData={this.state.CharacterDataToSend}></Card>\n            </div>\n        )\n    }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}