{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/nitbhatn0/Desktop/myToons/components/card.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport ItemStyles from './styles/itemStyles';\nimport Moment from 'moment';\n\nvar Card = /*#__PURE__*/function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  var _super = _createSuper(Card);\n\n  function Card(props) {\n    _classCallCheck(this, Card);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this.props.CharacterData.map(function (_char) {\n                console.log(_char.created);\n              }));\n\n            case 2:\n              _context.t0 = console;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(this.props);\n\n            case 5:\n              _context.t1 = _context.sent;\n\n              _context.t0.log.call(_context.t0, _context.t1);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return this.props.CharacterData.map(function (_char2) {\n        return __jsx(ItemStyles, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }\n        }, __jsx(\"div\", {\n          className: \"image-container\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }\n        }, __jsx(\"img\", {\n          src: _char2.image,\n          alt: _char2.title,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }\n        }), __jsx(\"div\", {\n          className: \"char-name-container\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }\n        }, __jsx(\"h3\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 33\n          }\n        }, _char2.name), __jsx(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }\n        }, \"ID: \", _char2.id, \" \"), \"-\", __jsx(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 61\n          }\n        }, \" Created: \", _char2.created))));\n      });\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nexport default Card;","map":{"version":3,"sources":["/Users/nitbhatn0/Desktop/myToons/components/card.js"],"names":["React","ItemStyles","Moment","Card","props","CharacterData","map","char","console","log","created","image","title","name","id","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;IACMC,I;;;;;AACF,gBAAaC,KAAb,EAAoB;AAAA;;AAAA,6BACTA,KADS;AAEnB;;;;;;;;;;+CAGS,KAAKA,KAAL,CAAWC,aAAX,CAAyBC,GAAzB,CAA6B,UAAAC,KAAI,EAAI;AACvCC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAI,CAACG,OAAjB;AACH,eAFK,C;;;4BAGNF,O;;+CAAkB,KAAKJ,K;;;;;0BAAfK,G;;;;;;;;;;;6BAGF;AAAA;;AACN,aACQ,KAAKL,KAAL,CAAWC,aAAX,CAAyBC,GAAzB,CAA6B,UAAAC,MAAI;AAAA,eAC7B,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,GAAG,EAAEA,MAAI,CAACI,KAAf;AAAsB,UAAA,GAAG,EAAEJ,MAAI,CAACK,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKL,MAAI,CAACM,IAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAWN,MAAI,CAACO,EAAhB,MAFJ,OAEgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAiBP,MAAI,CAACG,OAAtB,CAFhC,CAFJ,CADJ,CAD6B;AAAA,OAAjC,CADR;AAcH;;;;EA3BcV,KAAK,CAACe,S;;AA8BzB,eAAeZ,IAAf","sourcesContent":["import React from 'react';\nimport ItemStyles from './styles/itemStyles'\nimport Moment from 'moment'\nclass Card extends React.Component {\n    constructor (props) {\n        super (props);\n    }\n\n    async componentDidMount () {\n        await this.props.CharacterData.map(char => {\n            console.log(char.created)\n        })\n        console.log(await this.props)\n    }\n    \n    render () {\n        return (\n                this.props.CharacterData.map(char => (\n                    <ItemStyles>\n                        <div className=\"image-container\">\n                            <img src={char.image} alt={char.title} />\n                            <div className=\"char-name-container\">\n                                <h3>{char.name}</h3>\n                                <span>ID: {char.id} </span>-<span> Created: {char.created}</span>\n                            </div>\n                        </div>\n                        \n                    </ItemStyles> \n                ))\n        )\n    }\n}\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}