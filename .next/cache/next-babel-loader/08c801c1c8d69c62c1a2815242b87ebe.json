{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rakrawat/workspace/my-toons/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Fragment } from 'react';\nimport Card from '../components/card';\nimport Filters from '../components/filters';\nimport { getStore } from '../redux/store';\nimport withRedux from \"next-redux-wrapper\";\nimport { getCharacters } from '../services/character'; // components\n\nimport CharacterList from '../components/CharacterList/CharacterList';\nimport Pagination from '../components/Pagination/Pagination';\n\nvar Home = /*#__PURE__*/function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    _classCallCheck(this, Home);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Home, [{\n    key: \"paginate\",\n    value: function paginate() {}\n  }, {\n    key: \"filter\",\n    value: function filter() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, __jsx(CharacterFilters, {\n        characters: this.props.characters,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }), __jsx(CharacterList, {\n        characters: this.props.characters,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }), __jsx(Pagination, {\n        pagination: this.props.pagination,\n        onPaginate: this.paginate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }));\n      /*\n      return (\n          <div>\n              <div className=\"float-left width-12\">\n                  <Filters species={this.state.speciesFilterData} gender={this.state.genderFilterData} origin={this.state.originFilterData}></Filters>\n              </div>\n              <div className=\"float-right width-85\">\n                  <Card CharacterData={this.state.CharacterDataToSend}></Card>\n              </div>\n          </div>\n      )\n      */\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(context) {\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", getCharacters().then(function (res) {\n                return {\n                  characters: res.data.results,\n                  pagination: res.data.info\n                };\n              })[\"catch\"](function (err) {\n                return {\n                  characters: [],\n                  pagination: null\n                };\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/rakrawat/workspace/my-toons/pages/index.js"],"names":["React","Fragment","Card","Filters","getStore","withRedux","getCharacters","CharacterList","Pagination","Home","props","characters","pagination","paginate","context","then","res","data","results","info","err","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,SAAQC,aAAR,QAA4B,uBAA5B,C,CAEA;;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;;IAEMC,I;;;;;AAEF,gBAAaC,KAAb,EAAoB;AAAA;;AAAA,6BACTA,KADS;AAEnB;;;;+BAgBU,CAEV;;;6BAEQ,CAER;;;6BAES;AAEN,aACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,gBAAD;AAAkB,QAAA,UAAU,EAAE,KAAKA,KAAL,CAAWC,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,MAAC,aAAD;AAAe,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,MAAC,UAAD;AAAY,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAAnC;AAA+C,QAAA,UAAU,EAAE,KAAKC,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ;AAQA;;;;;;;;;;;;AAYH;;;oCA5C6BC,O;;;;;+CACnBR,aAAa,GAAGS,IAAhB,CAAqB,UAAAC,GAAG,EAAI;AAC/B,uBAAO;AACHL,kBAAAA,UAAU,EAAEK,GAAG,CAACC,IAAJ,CAASC,OADlB;AAEHN,kBAAAA,UAAU,EAAEI,GAAG,CAACC,IAAJ,CAASE;AAFlB,iBAAP;AAIH,eALM,WAKE,UAAAC,GAAG,EAAI;AACZ,uBAAO;AACHT,kBAAAA,UAAU,EAAE,EADT;AAEHC,kBAAAA,UAAU,EAAE;AAFT,iBAAP;AAIH,eAVM,C;;;;;;;;;;;;EAPIZ,KAAK,CAACqB,S;;AAqDzB,eAAeZ,IAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport Card from '../components/card';\nimport Filters from '../components/filters';\nimport { getStore } from '../redux/store';\nimport withRedux from \"next-redux-wrapper\";\nimport {getCharacters} from '../services/character';\n\n// components\nimport CharacterList from '../components/CharacterList/CharacterList';\nimport Pagination from '../components/Pagination/Pagination';\n\nclass Home extends React.Component {\n\n    constructor (props) {\n        super (props);\n    }\n\n    static async getInitialProps (context) {\n        return getCharacters().then(res => {\n            return {\n                characters: res.data.results,\n                pagination: res.data.info\n            };\n        }).catch(err => {\n            return {\n                characters: [],\n                pagination: null\n            };\n        });\n    }\n\n    paginate() {\n\n    }\n\n    filter() {\n\n    }\n\n    render () {\n\n        return (\n            <Fragment>\n                <CharacterFilters characters={this.props.characters} />\n                <CharacterList characters={this.props.characters} />\n                <Pagination pagination={this.props.pagination} onPaginate={this.paginate} />\n            </Fragment>\n        );\n\n        /*\n        return (\n            <div>\n                <div className=\"float-left width-12\">\n                    <Filters species={this.state.speciesFilterData} gender={this.state.genderFilterData} origin={this.state.originFilterData}></Filters>\n                </div>\n                <div className=\"float-right width-85\">\n                    <Card CharacterData={this.state.CharacterDataToSend}></Card>\n                </div>\n            </div>\n        )\n        */\n    }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}