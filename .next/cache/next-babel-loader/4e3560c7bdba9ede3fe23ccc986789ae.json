{"ast":null,"code":"var _jsxFileName = \"/Users/rakrawat/workspace/my-toons/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Card from '../components/card';\nimport Filters from '../components/filters';\nimport { getStore } from '../redux/store';\nimport withRedux from \"next-redux-wrapper\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      CharacterDataToSend: [],\n      speciesFilterData: [],\n      genderFilterData: [],\n      originFilterData: []\n    };\n  }\n\n  static async getInitialProps(context) {\n    // getStore().dispatch({\n    //     type: \"SET_CHARACTERS\",\n    //     payload: [1,2,3]\n    // })\n    // console.log(\"+++++++++++++++++++\", context);\n    // return Promise.resolve({})\n    const url = 'https://rickandmortyapi.com/api/character/ ';\n    const response = await fetch(url);\n    const CharacterData = await response.json();\n    let species = [];\n    let gender = [];\n    let origin = [];\n    let speciesFilterData = [];\n    let genderFilterData = [];\n    CharacterData.results.find(data => {\n      species.push(data.species);\n      gender.push(data.gender);\n      origin.push(data.origin);\n    });\n    speciesFilterData = species.filter((item, index) => species.indexOf(item) === index);\n    genderFilterData = gender.filter((item, index) => gender.indexOf(item) === index);\n    return {\n      pageProps: {\n        CharacterDataToSend: CharacterData.results,\n        speciesFilterData: speciesFilterData,\n        genderFilterData: genderFilterData,\n        originFilterData: origin\n      }\n    };\n  }\n\n  async componentDidMount() {// const url = 'https://rickandmortyapi.com/api/character/ ';\n    // const response = await fetch(url);\n    // const CharacterData = await response.json();\n    // let species = [];\n    // let gender = [];\n    // let origin = [];\n    // let speciesFilterData= [];\n    // let genderFilterData= [];\n    // CharacterData.results.find(data => {\n    //     species.push(data.species);\n    //     gender.push(data.gender);\n    //     origin.push(data.origin);\n    // });\n    // speciesFilterData = species.filter((item, index) => species.indexOf(item) === index);\n    // genderFilterData = gender.filter((item, index) => gender.indexOf(item) === index);\n    // this.setState({\n    //      CharacterDataToSend: CharacterData.results, \n    //      speciesFilterData:  speciesFilterData, \n    //      genderFilterData: genderFilterData,\n    //      originFilterData: origin\n    //     });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"float-left width-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, __jsx(Filters, {\n      species: this.state.speciesFilterData,\n      gender: this.state.genderFilterData,\n      origin: this.state.originFilterData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"float-right width-85\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, __jsx(Card, {\n      CharacterData: this.state.CharacterDataToSend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/rakrawat/workspace/my-toons/pages/index.js"],"names":["React","Card","Filters","getStore","withRedux","Home","Component","constructor","props","state","CharacterDataToSend","speciesFilterData","genderFilterData","originFilterData","getInitialProps","context","url","response","fetch","CharacterData","json","species","gender","origin","results","find","data","push","filter","item","index","indexOf","pageProps","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from '../components/card';\nimport Filters from '../components/filters';\nimport { getStore } from '../redux/store';\nimport withRedux from \"next-redux-wrapper\";\nclass Home extends React.Component {\n    constructor (props) {\n        super (props);\n        this.state = {\n            CharacterDataToSend: [],\n            speciesFilterData: [],\n            genderFilterData: [],\n            originFilterData: []\n        }\n    }\n    static async getInitialProps (context) {\n        // getStore().dispatch({\n        //     type: \"SET_CHARACTERS\",\n        //     payload: [1,2,3]\n        // })\n\n        // console.log(\"+++++++++++++++++++\", context);\n        // return Promise.resolve({})\n        const url = 'https://rickandmortyapi.com/api/character/ ';\n        const response = await fetch(url);\n        const CharacterData = await response.json();\n        let species = [];\n        let gender = [];\n        let origin = [];\n\n        let speciesFilterData= [];\n        let genderFilterData= [];\n        \n\n        CharacterData.results.find(data => {\n            species.push(data.species);\n            gender.push(data.gender);\n            origin.push(data.origin);\n        });\n\n        speciesFilterData = species.filter((item, index) => species.indexOf(item) === index);\n        genderFilterData = gender.filter((item, index) => gender.indexOf(item) === index);\n\n        return {\n            pageProps: {\n                CharacterDataToSend: CharacterData.results, \n                speciesFilterData:  speciesFilterData, \n                genderFilterData: genderFilterData,\n                originFilterData: origin\n            }\n        };\n    }\n\n    async componentDidMount () {\n        // const url = 'https://rickandmortyapi.com/api/character/ ';\n        // const response = await fetch(url);\n        // const CharacterData = await response.json();\n        // let species = [];\n        // let gender = [];\n        // let origin = [];\n\n        // let speciesFilterData= [];\n        // let genderFilterData= [];\n        \n\n        // CharacterData.results.find(data => {\n        //     species.push(data.species);\n        //     gender.push(data.gender);\n        //     origin.push(data.origin);\n        // });\n\n        // speciesFilterData = species.filter((item, index) => species.indexOf(item) === index);\n        // genderFilterData = gender.filter((item, index) => gender.indexOf(item) === index);\n\n        // this.setState({\n        //      CharacterDataToSend: CharacterData.results, \n        //      speciesFilterData:  speciesFilterData, \n        //      genderFilterData: genderFilterData,\n        //      originFilterData: origin\n        //     });\n    }\n\n    render () {\n        return (\n            <div>\n                <div className=\"float-left width-12\">\n                    <Filters species={this.state.speciesFilterData} gender={this.state.genderFilterData} origin={this.state.originFilterData}></Filters>\n                </div>\n                <div className=\"float-right width-85\">\n                    <Card CharacterData={this.state.CharacterDataToSend}></Card>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}