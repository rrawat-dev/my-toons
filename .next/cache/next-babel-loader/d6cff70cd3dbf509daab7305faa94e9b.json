{"ast":null,"code":"var _jsxFileName = \"/Users/rakrawat/workspace/my-toons/components/Filters/Filters.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nexport default function Filters(props) {\n  var _this = this;\n\n  var label = props.label,\n      filters = props.filters,\n      sortby = props.sortby;\n\n  var _useState = useState([]),\n      selectedFilters = _useState[0],\n      setSelectedFilters = _useState[1];\n\n  function onFilterChange(evt) {\n    var value = evt.target.value;\n    var newFilters = evt.target.checked ? selectedFilters.concat(value) : selectedFilters.filter(function (filter) {\n      return filter !== value;\n    });\n    props.onFilterChange && props.onFilterChange(newFilters);\n    setSelectedFilters(newFilters);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, label), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, filters.map(function (filter) {\n    return __jsx(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }\n    }, __jsx(\"label\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 29\n      }\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      value: filter,\n      checked: selectedFilters.indexOf(filter) > -1,\n      onChange: onFilterChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 33\n      }\n    }), filter));\n  })));\n}","map":{"version":3,"sources":["/Users/rakrawat/workspace/my-toons/components/Filters/Filters.js"],"names":["React","useState","Filters","props","label","filters","sortby","selectedFilters","setSelectedFilters","onFilterChange","evt","value","target","newFilters","checked","concat","filter","map","indexOf"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAAA,MAC5BC,KAD4B,GACFD,KADE,CAC5BC,KAD4B;AAAA,MACrBC,OADqB,GACFF,KADE,CACrBE,OADqB;AAAA,MACZC,MADY,GACFH,KADE,CACZG,MADY;;AAAA,kBAEWL,QAAQ,CAAC,EAAD,CAFnB;AAAA,MAE5BM,eAF4B;AAAA,MAEXC,kBAFW;;AAInC,WAASC,cAAT,CAAwBC,GAAxB,EAA6B;AACzB,QAAMC,KAAK,GAAGD,GAAG,CAACE,MAAJ,CAAWD,KAAzB;AACA,QAAME,UAAU,GAAGH,GAAG,CAACE,MAAJ,CAAWE,OAAX,GAAqBP,eAAe,CAACQ,MAAhB,CAAuBJ,KAAvB,CAArB,GAAqDJ,eAAe,CAACS,MAAhB,CAAuB,UAAAA,MAAM;AAAA,aAAIA,MAAM,KAAKL,KAAf;AAAA,KAA7B,CAAxE;AAEAR,IAAAA,KAAK,CAACM,cAAN,IAAwBN,KAAK,CAACM,cAAN,CAAqBI,UAArB,CAAxB;AACAL,IAAAA,kBAAkB,CAACK,UAAD,CAAlB;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,OAAO,CAACY,GAAR,CAAY,UAAAD,MAAM;AAAA,WACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,KAAK,EAAEA,MAFX;AAGI,MAAA,OAAO,EAAET,eAAe,CAACW,OAAhB,CAAwBF,MAAxB,IAAkC,CAAC,CAHhD;AAII,MAAA,QAAQ,EAAEP,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOKO,MAPL,CADJ,CADc;AAAA,GAAlB,CAFR,CAFJ,CADJ;AAsBH","sourcesContent":["import React, {useState} from 'react';\n\nexport default function Filters(props) {\n    const {label, filters, sortby} = props;\n    const [selectedFilters, setSelectedFilters] = useState([]);\n\n    function onFilterChange(evt) {\n        const value = evt.target.value;\n        const newFilters = evt.target.checked ? selectedFilters.concat(value) : selectedFilters.filter(filter => filter !== value)\n\n        props.onFilterChange && props.onFilterChange(newFilters);\n        setSelectedFilters(newFilters);\n    }\n\n    return (\n        <div>\n            <h3>{label}</h3>\n            <ul>\n                {\n                    filters.map(filter => (\n                        <li>\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    value={filter}\n                                    checked={selectedFilters.indexOf(filter) > -1}\n                                    onChange={onFilterChange}\n                                />\n                                {filter}\n                            </label>\n                        </li>\n                    ))\n                }\n            </ul>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}