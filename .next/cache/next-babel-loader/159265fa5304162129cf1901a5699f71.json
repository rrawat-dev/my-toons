{"ast":null,"code":"var _jsxFileName = \"/Users/rakrawat/workspace/my-toons/components/Filters/Filters.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nexport default function Filters(props) {\n  const {\n    label,\n    filters,\n    sortby\n  } = props;\n  const {\n    0: selectedFilters,\n    1: setSelectedFilters\n  } = useState([]);\n\n  function onFilterChange(evt) {\n    const value = evt.target.value;\n    const newFilters = evt.target.checked ? selectedFilters.concat(value) : selectedFilters.filter(filter => filter !== value);\n    props.onFilterChange && props.onFilterChange(newFilters);\n    setSelectedFilters(newFilters);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, label), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, filters.map(filter => __jsx(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    value: filter,\n    checked: selectedFilters.indexOf(filter) > -1,\n    onChange: onFilterChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 33\n    }\n  }), filter)))));\n}","map":{"version":3,"sources":["/Users/rakrawat/workspace/my-toons/components/Filters/Filters.js"],"names":["React","useState","Filters","props","label","filters","sortby","selectedFilters","setSelectedFilters","onFilterChange","evt","value","target","newFilters","checked","concat","filter","map","indexOf"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACnC,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BH,KAAjC;AACA,QAAM;AAAA,OAACI,eAAD;AAAA,OAAkBC;AAAlB,MAAwCP,QAAQ,CAAC,EAAD,CAAtD;;AAEA,WAASQ,cAAT,CAAwBC,GAAxB,EAA6B;AACzB,UAAMC,KAAK,GAAGD,GAAG,CAACE,MAAJ,CAAWD,KAAzB;AACA,UAAME,UAAU,GAAGH,GAAG,CAACE,MAAJ,CAAWE,OAAX,GAAqBP,eAAe,CAACQ,MAAhB,CAAuBJ,KAAvB,CAArB,GAAqDJ,eAAe,CAACS,MAAhB,CAAuBA,MAAM,IAAIA,MAAM,KAAKL,KAA5C,CAAxE;AAEAR,IAAAA,KAAK,CAACM,cAAN,IAAwBN,KAAK,CAACM,cAAN,CAAqBI,UAArB,CAAxB;AACAL,IAAAA,kBAAkB,CAACK,UAAD,CAAlB;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,OAAO,CAACY,GAAR,CAAYD,MAAM,IACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAEA,MAFX;AAGI,IAAA,OAAO,EAAET,eAAe,CAACW,OAAhB,CAAwBF,MAAxB,IAAkC,CAAC,CAHhD;AAII,IAAA,QAAQ,EAAEP,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAOKO,MAPL,CADJ,CADJ,CAFR,CAFJ,CADJ;AAsBH","sourcesContent":["import React, {useState} from 'react';\n\nexport default function Filters(props) {\n    const {label, filters, sortby} = props;\n    const [selectedFilters, setSelectedFilters] = useState([]);\n\n    function onFilterChange(evt) {\n        const value = evt.target.value;\n        const newFilters = evt.target.checked ? selectedFilters.concat(value) : selectedFilters.filter(filter => filter !== value)\n\n        props.onFilterChange && props.onFilterChange(newFilters);\n        setSelectedFilters(newFilters);\n    }\n\n    return (\n        <div>\n            <h3>{label}</h3>\n            <ul>\n                {\n                    filters.map(filter => (\n                        <li>\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    value={filter}\n                                    checked={selectedFilters.indexOf(filter) > -1}\n                                    onChange={onFilterChange}\n                                />\n                                {filter}\n                            </label>\n                        </li>\n                    ))\n                }\n            </ul>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}