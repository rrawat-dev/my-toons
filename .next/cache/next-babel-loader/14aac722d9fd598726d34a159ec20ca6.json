{"ast":null,"code":"var _jsxFileName = \"/Users/rakrawat/workspace/my-toons/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from 'react';\nimport Card from '../components/card';\nimport Filters from '../components/filters';\nimport { getStore } from '../redux/store';\nimport withRedux from \"next-redux-wrapper\";\nimport { getCharacters } from '../services/character'; // components\n\nimport Search from '../components/Search';\nimport Sorting from '../components/Sorting';\nimport CharacterList from '../components/CharacterList/CharacterList';\nimport Pagination from '../components/Pagination/Pagination';\nimport CharacterFilters from '../components/CharacterFilters/CharacterFilters';\nimport CharacterFiltersApplied from '../components/CharacterFiltersApplied/CharacterFiltersApplied';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: props.characters || [],\n      pagination: props.pagination || null,\n      page: 1,\n      filters: {}\n    };\n    this.fetchCharacters = this.fetchCharacters.bind(this);\n    this.paginateCharacters = this.paginateCharacters.bind(this);\n    this.filterCharacters = this.filterCharacters.bind(this);\n    this.searchCharacters = this.searchCharacters.bind(this);\n    this.onAppliedFilterRemove = this.onAppliedFilterRemove.bind(this);\n  }\n\n  static async getInitialProps(context) {\n    return getCharacters().then(res => {\n      return {\n        characters: res.data.results,\n        pagination: res.data.info\n      };\n    }).catch(err => {\n      return {\n        characters: [],\n        pagination: null\n      };\n    });\n  }\n\n  fetchCharacters() {\n    getCharacters({\n      searchText: this.state.searchText || '',\n      species: this.state.filters.species || [],\n      gender: this.state.filters.gender || [],\n      page: this.state.page || 1\n    }).then(res => {\n      this.setState({\n        characters: res.data.results,\n        pagination: res.data.info\n      });\n    }).catch(err => {\n      return {\n        characters: [],\n        pagination: null\n      };\n    });\n  }\n\n  paginateCharacters(page) {\n    this.setState({\n      page\n    }, () => this.fetchCharacters());\n  }\n\n  filterCharacters(filters) {\n    this.setState({\n      filters,\n      page: 1\n    }, () => this.fetchCharacters());\n  }\n\n  searchCharacters(searchText) {\n    this.setState({\n      searchText,\n      page: 1\n    }, () => this.fetchCharacters());\n  }\n\n  onAppliedFilterRemove(filterCategory, removedFilter) {\n    const data = {\n      filters: _objectSpread({}, this.state.filters, {\n        [filterCategory]: this.state.filters[filterCategory].filter(filter => filter !== removedFilter)\n      })\n    };\n    this.setState({\n      data\n    }, () => {\n      this.fetchCharacters();\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"float-left width-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, __jsx(CharacterFilters, {\n      characters: this.props.characters,\n      onFilterChange: this.filterCharacters,\n      selectedFilters: this.state.filters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    })), __jsx(\"div\", {\n      className: \"float-right width-85\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, __jsx(CharacterFiltersApplied, {\n      filters: this.state.filters,\n      onAppliedFilterRemove: this.onAppliedFilterRemove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }), __jsx(Search, {\n      onSearch: this.searchCharacters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }), __jsx(Sorting, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }), __jsx(CharacterList, {\n      characters: this.state.characters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }), __jsx(Pagination, {\n      pagination: this.state.pagination,\n      onPaginate: this.paginateCharacters,\n      page: this.state.page,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/rakrawat/workspace/my-toons/pages/index.js"],"names":["React","Fragment","Card","Filters","getStore","withRedux","getCharacters","Search","Sorting","CharacterList","Pagination","CharacterFilters","CharacterFiltersApplied","Home","Component","constructor","props","state","characters","pagination","page","filters","fetchCharacters","bind","paginateCharacters","filterCharacters","searchCharacters","onAppliedFilterRemove","getInitialProps","context","then","res","data","results","info","catch","err","searchText","species","gender","setState","filterCategory","removedFilter","filter","render"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport Card from '../components/card';\nimport Filters from '../components/filters';\nimport { getStore } from '../redux/store';\nimport withRedux from \"next-redux-wrapper\";\nimport {getCharacters} from '../services/character';\n\n// components\nimport Search from '../components/Search';\nimport Sorting from '../components/Sorting';\nimport CharacterList from '../components/CharacterList/CharacterList';\nimport Pagination from '../components/Pagination/Pagination';\nimport CharacterFilters from '../components/CharacterFilters/CharacterFilters';\nimport CharacterFiltersApplied from '../components/CharacterFiltersApplied/CharacterFiltersApplied';\n\nclass Home extends React.Component {\n\n    constructor (props) {\n        super (props);\n        this.state = {\n            characters: props.characters || [],\n            pagination: props.pagination || null,\n            page: 1,\n            filters: {}\n        };\n\n        this.fetchCharacters = this.fetchCharacters.bind(this);\n        this.paginateCharacters = this.paginateCharacters.bind(this);\n        this.filterCharacters = this.filterCharacters.bind(this);\n        this.searchCharacters = this.searchCharacters.bind(this);\n        this.onAppliedFilterRemove = this.onAppliedFilterRemove.bind(this);\n    }\n\n    static async getInitialProps (context) {\n        return getCharacters().then(res => {\n            return {\n                characters: res.data.results,\n                pagination: res.data.info\n            };\n        }).catch(err => {\n            return {\n                characters: [],\n                pagination: null\n            };\n        });\n    }\n\n    fetchCharacters() {\n        getCharacters({\n            searchText: this.state.searchText || '',\n            species: this.state.filters.species || [],\n            gender: this.state.filters.gender || [],\n            page: this.state.page || 1\n        }).then(res => {\n            this.setState({\n                characters: res.data.results,\n                pagination: res.data.info\n            });\n        }).catch(err => {\n            return {\n                characters: [],\n                pagination: null\n            };\n        });\n    }\n\n    paginateCharacters(page) {\n        this.setState({\n            page\n        }, () => this.fetchCharacters());\n    }\n\n    filterCharacters(filters) {\n        this.setState({\n            filters,\n            page: 1\n        }, () => this.fetchCharacters());\n    }\n\n    searchCharacters(searchText) {\n        this.setState({\n            searchText,\n            page: 1\n        }, () => this.fetchCharacters());\n    }\n\n    onAppliedFilterRemove(filterCategory, removedFilter) {\n        const data = {\n            filters: {\n                ...this.state.filters,\n                [filterCategory]: this.state.filters[filterCategory].filter(filter => filter !== removedFilter)\n            }\n        };\n\n        this.setState({\n            data\n        }, () => {\n            this.fetchCharacters()\n        });\n    }\n\n    render () {\n        return (\n            <div>\n                <div className=\"float-left width-12\">\n                    <CharacterFilters characters={this.props.characters} onFilterChange={this.filterCharacters} selectedFilters={this.state.filters} />\n                </div>\n                <div className=\"float-right width-85\">\n                    <CharacterFiltersApplied filters={this.state.filters} onAppliedFilterRemove={this.onAppliedFilterRemove} />\n                    <Search onSearch={this.searchCharacters} />\n                    <Sorting />\n                    <CharacterList characters={this.state.characters} />\n                    <Pagination pagination={this.state.pagination} onPaginate={this.paginateCharacters} page={this.state.page} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}