{"ast":null,"code":"var _jsxFileName = \"/Users/rakrawat/workspace/my-toons/components/CharacterFilters/CharacterFilters.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Filters from '../Filters/Filters';\nconst filtersData = {\n  \"species\": {\n    \"label\": \"Species\",\n    \"data\": [\"Human\", \"Mythology\", \"Other\"]\n  }\n};\nexport default function CharacterFilters(props) {\n  const {\n    0: filters,\n    1: setFilters\n  } = useState({\n    species: [],\n    gender: [],\n    origin: []\n  });\n  useEffect(() => {\n    const data = Object.assign({}, filters);\n    props.characters.forEach(character => {\n      if (data.species.indexOf(character.species) === -1) {\n        data.species = data.species.concat(character.species);\n      }\n\n      if (data.gender.indexOf(character.gender) === -1) {\n        data.gender = data.gender.concat(character.gender);\n      }\n    });\n    setFilters(data);\n  }, [props.characters]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, filters.species.length > 0 && __jsx(Filters, {\n    label: \"Species\",\n    filters: filters.species,\n    sort: \"ASC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 44\n    }\n  }), filters.gender.length > 0 && __jsx(Filters, {\n    label: \"Gender\",\n    filters: filters.gender,\n    sort: \"DESC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 43\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/rakrawat/workspace/my-toons/components/CharacterFilters/CharacterFilters.js"],"names":["React","useEffect","useState","Filters","filtersData","CharacterFilters","props","filters","setFilters","species","gender","origin","data","Object","assign","characters","forEach","character","indexOf","concat","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,WAAW,GAAG;AAChB,aAAW;AACP,aAAS,SADF;AAEP,YAAQ,CACJ,OADI,EAEJ,WAFI,EAGJ,OAHI;AAFD;AADK,CAApB;AAWA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC5C,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC;AACnCO,IAAAA,OAAO,EAAE,EAD0B;AAEnCC,IAAAA,MAAM,EAAE,EAF2B;AAGnCC,IAAAA,MAAM,EAAE;AAH2B,GAAD,CAAtC;AAMAV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,OAAlB,CAAb;AAEAD,IAAAA,KAAK,CAACS,UAAN,CAAiBC,OAAjB,CAAyBC,SAAS,IAAI;AAClC,UAAIL,IAAI,CAACH,OAAL,CAAaS,OAAb,CAAqBD,SAAS,CAACR,OAA/B,MAA4C,CAAC,CAAjD,EAAoD;AAChDG,QAAAA,IAAI,CAACH,OAAL,GAAeG,IAAI,CAACH,OAAL,CAAaU,MAAb,CAAoBF,SAAS,CAACR,OAA9B,CAAf;AACH;;AAED,UAAIG,IAAI,CAACF,MAAL,CAAYQ,OAAZ,CAAoBD,SAAS,CAACP,MAA9B,MAA0C,CAAC,CAA/C,EAAkD;AAC9CE,QAAAA,IAAI,CAACF,MAAL,GAAcE,IAAI,CAACF,MAAL,CAAYS,MAAZ,CAAmBF,SAAS,CAACP,MAA7B,CAAd;AACH;AACJ,KARD;AAUAF,IAAAA,UAAU,CAACI,IAAD,CAAV;AACH,GAdQ,EAcN,CAACN,KAAK,CAACS,UAAP,CAdM,CAAT;AAgBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,OAAO,CAACE,OAAR,CAAgBW,MAAhB,GAAyB,CAAzB,IAA8B,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAyB,IAAA,OAAO,EAAEb,OAAO,CAACE,OAA1C;AAAmD,IAAA,IAAI,EAAC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnC,EAEKF,OAAO,CAACG,MAAR,CAAeU,MAAf,GAAwB,CAAxB,IAA6B,MAAC,OAAD;AAAS,IAAA,KAAK,EAAC,QAAf;AAAwB,IAAA,OAAO,EAAEb,OAAO,CAACG,MAAzC;AAAiD,IAAA,IAAI,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFlC,CADJ;AAMH","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Filters from '../Filters/Filters';\n\nconst filtersData = {\n    \"species\": {\n        \"label\": \"Species\",\n        \"data\": [\n            \"Human\",\n            \"Mythology\",\n            \"Other\"\n        ]\n    },\n};\n\nexport default function CharacterFilters(props) {\n    const [filters, setFilters] = useState({\n        species: [],\n        gender: [],\n        origin: []\n    });\n\n    useEffect(() => {\n        const data = Object.assign({}, filters);\n\n        props.characters.forEach(character => {\n            if (data.species.indexOf(character.species) === -1) {\n                data.species = data.species.concat(character.species);\n            }\n\n            if (data.gender.indexOf(character.gender) === -1) {\n                data.gender = data.gender.concat(character.gender);\n            }\n        });\n\n        setFilters(data);\n    }, [props.characters]);\n\n    return (\n        <div>\n            {filters.species.length > 0 && <Filters label=\"Species\" filters={filters.species} sort=\"ASC\" />}\n            {filters.gender.length > 0 && <Filters label=\"Gender\" filters={filters.gender} sort=\"DESC\" />}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}