{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/nitbhatn0/Desktop/myToons/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Card from '../components/card';\n\nvar Home = /*#__PURE__*/function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      CharacterDataToSend: []\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var url, response, CharacterData, _CharacterData$result, species, gender, origin;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = 'https://rickandmortyapi.com/api/character/ ';\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 6:\n              CharacterData = _context.sent;\n              _CharacterData$result = _slicedToArray(CharacterData.results, 3), species = _CharacterData$result[0], gender = _CharacterData$result[1], origin = _CharacterData$result[2];\n              console.log(\"species\", species);\n              console.log(\"gender\", gender);\n              console.log(\"origin\", origin);\n              this.setState({\n                CharacterDataToSend: CharacterData.results\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, __jsx(Card, {\n        CharacterData: this.state.CharacterDataToSend,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":{"version":3,"sources":["/Users/nitbhatn0/Desktop/myToons/pages/index.js"],"names":["React","Card","Home","props","state","CharacterDataToSend","url","fetch","response","json","CharacterData","results","species","gender","origin","console","log","setState","Component"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;IAEMC,I;;;;;AACF,gBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAChB,8BAAOA,KAAP;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,mBAAmB,EAAE;AADZ,KAAb;AAFgB;AAKnB;;;;;;;;;;;AAESC,cAAAA,G,GAAM,6C;;+CACWC,KAAK,CAACD,GAAD,C;;;AAAtBE,cAAAA,Q;;+CACsBA,QAAQ,CAACC,IAAT,E;;;AAAtBC,cAAAA,a;qDAC4BA,aAAa,CAACC,O,MAAzCC,O,6BAASC,M,6BAAQC,M;AAExBC,cAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,OAAvB;AACAG,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;AACAE,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AAEA,mBAAKG,QAAL,CAAc;AAAEZ,gBAAAA,mBAAmB,EAAEK,aAAa,CAACC;AAArC,eAAd;;;;;;;;;;;6BAGM;AACN,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD;AAAM,QAAA,aAAa,EAAE,KAAKP,KAAL,CAAWC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;;;EA1BcL,KAAK,CAACkB,S;;AA6BzB,eAAehB,IAAf","sourcesContent":["import React from 'react'\nimport Card from '../components/card'\n\nclass Home extends React.Component {\n    constructor (props) {\n        super (props);\n        this.state = {\n            CharacterDataToSend: []\n        }\n    }\n    async componentDidMount () {\n        const url = 'https://rickandmortyapi.com/api/character/ ';\n        const response = await fetch(url);\n        const CharacterData = await response.json();\n        const [species, gender, origin] = CharacterData.results;\n\n        console.log(\"species\", species);\n        console.log(\"gender\", gender);\n        console.log(\"origin\", origin);\n\n        this.setState({ CharacterDataToSend: CharacterData.results });\n    }\n\n    render () {\n        return (\n            <div>\n                <Card CharacterData={this.state.CharacterDataToSend}></Card>\n            </div>\n        )\n    }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}