{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/nitbhatn0/Desktop/myToons/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Card from '../components/card';\nimport Filters from '../components/filters';\nimport { getStore } from '../redux/store';\nimport withRedux from \"next-redux-wrapper\";\nexport default withRedux(getStore, {\n  debug: true\n})( /*#__PURE__*/function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      CharacterDataToSend: [],\n      speciesFilterData: [],\n      genderFilterData: [],\n      originFilterData: []\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var url, response, CharacterData, species, gender, origin, speciesFilterData, genderFilterData;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = 'https://rickandmortyapi.com/api/character/ ';\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 6:\n              CharacterData = _context.sent;\n              species = [];\n              gender = [];\n              origin = [];\n              speciesFilterData = [];\n              genderFilterData = [];\n              CharacterData.results.find(function (data) {\n                species.push(data.species);\n                gender.push(data.gender);\n                origin.push(data.origin);\n              });\n              speciesFilterData = species.filter(function (item, index) {\n                return species.indexOf(item) === index;\n              });\n              genderFilterData = gender.filter(function (item, index) {\n                return gender.indexOf(item) === index;\n              });\n              this.setState({\n                CharacterDataToSend: CharacterData.results,\n                speciesFilterData: speciesFilterData,\n                genderFilterData: genderFilterData,\n                originFilterData: origin\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"float-left width-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, __jsx(Filters, {\n        species: this.state.speciesFilterData,\n        gender: this.state.genderFilterData,\n        origin: this.state.originFilterData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      })), __jsx(\"div\", {\n        className: \"float-right width-85\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, __jsx(Card, {\n        CharacterData: this.state.CharacterDataToSend,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(context) {\n      getStore().dispatch({\n        type: \"SET_CHARACTERS\",\n        payload: [1, 2, 3]\n      });\n      console.log(\"+++++++++++++++++++\", context);\n      return Promise.resolve({});\n    }\n  }]);\n\n  return Home;\n}(React.Component));","map":{"version":3,"sources":["/Users/nitbhatn0/Desktop/myToons/pages/index.js"],"names":["React","Card","Filters","getStore","withRedux","debug","props","state","CharacterDataToSend","speciesFilterData","genderFilterData","originFilterData","url","fetch","response","json","CharacterData","species","gender","origin","results","find","data","push","filter","item","index","indexOf","setState","context","dispatch","type","payload","console","log","Promise","resolve","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from '../components/card';\nimport Filters from '../components/filters';\nimport { getStore } from '../redux/store';\nimport withRedux from \"next-redux-wrapper\";\nexport default withRedux(getStore, {debug: true})(class Home extends React.Component {\n\n    constructor (props) {\n        super (props);\n        this.state = {\n            CharacterDataToSend: [],\n            speciesFilterData: [],\n            genderFilterData: [],\n            originFilterData: []\n        }\n    }\n    static getInitialProps (context) {\n        getStore().dispatch({\n            type: \"SET_CHARACTERS\",\n            payload: [1,2,3]\n        })\n        console.log(\"+++++++++++++++++++\", context);\n        return Promise.resolve({})\n    }\n\n    async componentDidMount () {\n        const url = 'https://rickandmortyapi.com/api/character/ ';\n        const response = await fetch(url);\n        const CharacterData = await response.json();\n        let species = [];\n        let gender = [];\n        let origin = [];\n\n        let speciesFilterData= [];\n        let genderFilterData= [];\n        \n\n        CharacterData.results.find(data => {\n            species.push(data.species);\n            gender.push(data.gender);\n            origin.push(data.origin);\n        });\n\n        speciesFilterData = species.filter((item, index) => species.indexOf(item) === index);\n        genderFilterData = gender.filter((item, index) => gender.indexOf(item) === index);\n\n        this.setState({\n             CharacterDataToSend: CharacterData.results, \n             speciesFilterData:  speciesFilterData, \n             genderFilterData: genderFilterData,\n             originFilterData: origin\n            });\n    }\n\n    render () {\n        return (\n            <div>\n                <div className=\"float-left width-12\">\n                    <Filters species={this.state.speciesFilterData} gender={this.state.genderFilterData} origin={this.state.originFilterData}></Filters>\n                </div>\n                <div className=\"float-right width-85\">\n                    <Card CharacterData={this.state.CharacterDataToSend}></Card>\n                </div>\n            </div>\n        )\n    }\n})"]},"metadata":{},"sourceType":"module"}