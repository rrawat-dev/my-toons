{"ast":null,"code":"var _jsxFileName = \"/Users/rakrawat/workspace/my-toons/components/CharacterFiltersApplied/CharacterFiltersApplied.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nexport default function CharacterFiltersApplied(props) {\n  var _this = this;\n\n  var filters = props.filters;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, Object.keys(filters || {}).map(function (filterCategory) {\n    return (filters[filterCategory] || []).map(function (filter) {\n      return filter ? __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 34\n        }\n      }, filter, \" \", __jsx(\"i\", {\n        onClick: function onClick() {\n          return removeFilter(filterCategory, filter);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 49\n        }\n      }, \"x\")) : null;\n    });\n  }));\n}","map":{"version":3,"sources":["/Users/rakrawat/workspace/my-toons/components/CharacterFiltersApplied/CharacterFiltersApplied.js"],"names":["React","CharacterFiltersApplied","props","filters","Object","keys","map","filterCategory","filter","removeFilter"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AAAA;;AAAA,MAC5CC,OAD4C,GACjCD,KADiC,CAC5CC,OAD4C;AAGnD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQC,MAAM,CAACC,IAAP,CAAYF,OAAO,IAAI,EAAvB,EAA2BG,GAA3B,CAA+B,UAAAC,cAAc;AAAA,WACzC,CAACJ,OAAO,CAACI,cAAD,CAAP,IAA2B,EAA5B,EAAgCD,GAAhC,CAAoC,UAAAE,MAAM;AAAA,aACtCA,MAAM,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOA,MAAP,OAAe;AAAG,QAAA,OAAO,EAAE;AAAA,iBAAMC,YAAY,CAACF,cAAD,EAAiBC,MAAjB,CAAlB;AAAA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAf,CAAH,GAAyF,IADzD;AAAA,KAA1C,CADyC;AAAA,GAA7C,CAFR,CADJ;AAWH","sourcesContent":["import React from 'react';\n\nexport default function CharacterFiltersApplied(props) {\n    const {filters} = props;\n\n    return (\n        <div>\n            {\n                Object.keys(filters || {}).map(filterCategory => (\n                    (filters[filterCategory] || []).map(filter => (\n                        filter ? <span>{filter} <i onClick={() => removeFilter(filterCategory, filter)}>x</i></span> : null\n                    ))\n                ))\n            }\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}