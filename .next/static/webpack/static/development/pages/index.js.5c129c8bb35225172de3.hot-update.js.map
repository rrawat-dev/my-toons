{"version":3,"file":"static/webpack/static/development/pages/index.js.5c129c8bb35225172de3.hot-update.js","sources":["webpack:///./components/Search.js","webpack:///./components/Sorting.js","webpack:///./pages/index.js"],"sourcesContent":["import React from 'react';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchText: ''\n        };\n\n        this.search = this.search.bind(this);\n        this.onSearchTextChange = this.onSearchTextChange.bind(this);\n    }\n\n    search() {\n        this.props.onSearch && this.props.onSearch(this.state.searchText);\n    }\n\n    onSearchTextChange(evt) {\n        this.setState({\n            searchText: evt.target.value\n        });\n    }\n\n    render () {\n        return (\n            <div>\n                <input type=\"text\" placeholder=\"Search here..\" onChange={this.onSearchTextChange} />\n                <button onClick={this.search}>Search</button>\n            </div>\n        )\n    }\n}\nexport default Search;","import React from 'react';\n\nclass Sorting extends React.Component {\n    render () {\n        return (\n            <div>\n                <h3>Sort by ID</h3>\n                <input type=\"radio\" name=\"sorting\" id=\"ascending\" />\n                <label for=\"ascending\">Ascending</label>\n                <input type=\"radio\" name=\"sorting\" id=\"descending\" />\n                <label for=\"descending\">Descending</label>\n            </div>\n        )\n    }\n}\nexport default Sorting;","import React, {Fragment} from 'react';\nimport Card from '../components/card';\nimport Filters from '../components/filters';\nimport { getStore } from '../redux/store';\nimport withRedux from \"next-redux-wrapper\";\nimport {getCharacters} from '../services/character';\n\n// components\nimport Search from '../components/Search';\nimport Sorting from '../components/Sorting';\nimport CharacterList from '../components/CharacterList/CharacterList';\nimport Pagination from '../components/Pagination/Pagination';\nimport CharacterFilters from '../components/CharacterFilters/CharacterFilters';\nimport CharacterFiltersApplied from '../components/CharacterFiltersApplied/CharacterFiltersApplied';\n\nclass Home extends React.Component {\n\n    constructor (props) {\n        super (props);\n        this.state = {\n            page: 1,\n            filters: {}\n        };\n\n        this.fetchCharacters = this.fetchCharacters.bind(this);\n        this.paginateCharacters = this.paginateCharacters.bind(this);\n        this.filterCharacters = this.filterCharacters.bind(this);\n        this.searchCharacters = this.searchCharacters.bind(this);\n        this.sortCharacters = this.sortCharacters.bind(this);\n    }\n\n    static async getInitialProps (context) {\n        return getCharacters().then(res => {\n            return {\n                characters: res.data.results,\n                pagination: res.data.info\n            };\n        }).catch(err => {\n            return {\n                characters: [],\n                pagination: null\n            };\n        });\n    }\n\n    fetchCharacters() {\n        return getCharacters({\n            search: this.state.searchText || '',\n            species: this.state.filters.species || [],\n            gender: this.state.filters.gender || [],\n            page: this.state.page || 1\n        }).then(res => {\n            return {\n                characters: res.data.results,\n                pagination: res.data.info\n            };\n        }).catch(err => {\n            return {\n                characters: [],\n                pagination: null\n            };\n        });\n    }\n\n    paginateCharacters(page) {\n        this.setState({\n            page\n        }, () => this.fetchCharacters());\n    }\n\n    filterCharacters(filters) {\n        this.setState({\n            filters,\n            page: 1\n        }, () => this.fetchCharacters());\n    }\n\n    searchCharacters(searchText) {\n        this.setState({\n            searchText,\n            page: 1\n        }, () => this.fetchCharacters());\n    }\n\n    sortCharacters() {\n\n    }\n\n    render () {\n        return (\n            <div>\n                <div className=\"float-left width-12\">\n                    <CharacterFilters characters={this.props.characters} onFilterChange={this.filterCharacters} />\n                </div>\n                <div className=\"float-right width-85\">\n                    <CharacterFiltersApplied filters={this.state.filters} />\n                    <Search />\n                    <Sorting />\n                    <CharacterList characters={this.props.characters} />\n                    <Pagination pagination={this.props.pagination} onPaginate={this.paginateCharacters} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AADA;AAIA;AACA;AARA;AASA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA7BA;AACA;AA8BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAXA;AACA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAXA;AAYA;AACA;;;AAeA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AADA;AAEA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AACA;;;AAEA;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;AAxEA;;;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;;;;;;;;;AA5BA;AACA;AA0FA;;;;A","sourceRoot":""}